{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet LoginComponent = class LoginComponent {\n  // Inyectar en el constructor el formBuilder\n  constructor(formBuilder) {\n    this.formBuilder = formBuilder;\n    ///Creamos el grupo de controles para el formulario de login\n    this.form = this.formBuilder.group({\n      password: ['', [Validators.required, Validators.minLength(6), Validators.maxLength(12)]],\n      email: ['', [Validators.required, Validators.email]]\n    });\n  }\n  ngOnInit() {}\n  get Password() {\n    return this.form.get(\"password\");\n  }\n  get Mail() {\n    return this.form.get(\"email\");\n  }\n  get PasswordValid() {\n    return this.Password?.touched && !this.Password?.valid;\n  }\n  get MailValid() {\n    return false;\n  }\n  onEnviar(event) {\n    // Detenemos la propagación o ejecución del compotamiento submit de un form\n    event.preventDefault;\n    if (this.form.valid) {\n      // Llamamos a nuestro servicio para enviar los datos al servidor\n      // También podríamos ejecutar alguna lógica extra\n      alert(\"Todo salio bien ¡Enviar formuario!\");\n    } else {\n      // Corremos todas las validaciones para que se ejecuten los mensajes de error en el template     \n      this.form.markAllAsTouched();\n    }\n  }\n};\nLoginComponent = __decorate([Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})], LoginComponent);\nexport { LoginComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AAQ1C,IAAMC,cAAc,GAApB,MAAMA,cAAc;EAEzB;EACAC,YAAoBC,WAAwB;IAAxB,gBAAW,GAAXA,WAAW;IAC7B;IACA,IAAI,CAACC,IAAI,GAAE,IAAI,CAACD,WAAW,CAACE,KAAK,CAAC;MAChCC,QAAQ,EAAC,CAAC,EAAE,EAAC,CAACC,UAAU,CAACC,QAAQ,EAAED,UAAU,CAACE,SAAS,CAAC,CAAC,CAAC,EAACF,UAAU,CAACG,SAAS,CAAC,EAAE,CAAC,CAAE,CAAC;MACtFC,KAAK,EAAC,CAAC,EAAE,EAAE,CAACJ,UAAU,CAACC,QAAQ,EAAED,UAAU,CAACI,KAAK,CAAC;KACpD,CAAC;EACH;EAEAC,QAAQ,IAAI;EAEZ,IAAIC,QAAQ;IACV,OAAO,IAAI,CAACT,IAAI,CAACU,GAAG,CAAC,UAAU,CAAC;EAClC;EAEA,IAAIC,IAAI;IACP,OAAO,IAAI,CAACX,IAAI,CAACU,GAAG,CAAC,OAAO,CAAC;EAC9B;EAEA,IAAIE,aAAa;IACf,OAAO,IAAI,CAACH,QAAQ,EAAEI,OAAO,IAAI,CAAC,IAAI,CAACJ,QAAQ,EAAEK,KAAK;EACxD;EAEA,IAAIC,SAAS;IACX,OAAO,KAAK;EACd;EAGAC,QAAQ,CAACC,KAAY;IACnB;IACAA,KAAK,CAACC,cAAc;IAEpB,IAAI,IAAI,CAAClB,IAAI,CAACc,KAAK,EAAC;MAClB;MACA;MACAK,KAAK,CAAC,oCAAoC,CAAC;KAC5C,MAAI;MACH;MACA,IAAI,CAACnB,IAAI,CAACoB,gBAAgB,EAAE;;EAGhC;CAGD;AA9CYvB,cAAc,eAL1BD,SAAS,CAAC;EACTyB,QAAQ,EAAE,WAAW;EACrBC,WAAW,EAAE,wBAAwB;EACrCC,SAAS,EAAE,CAAC,uBAAuB;CACpC,CAAC,GACW1B,cAAc,CA8C1B;SA9CYA,cAAc","names":["Component","LoginComponent","constructor","formBuilder","form","group","password","Validators","required","minLength","maxLength","email","ngOnInit","Password","get","Mail","PasswordValid","touched","valid","MailValid","onEnviar","event","preventDefault","alert","markAllAsTouched","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["C:\\Users\\Martin\\Desktop\\maqueta\\portfolioangular\\src\\app\\modals\\login\\login.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\n\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit{\n  form: FormGroup;\n  // Inyectar en el constructor el formBuilder\n  constructor(private formBuilder: FormBuilder){ \n    ///Creamos el grupo de controles para el formulario de login\n    this.form= this.formBuilder.group({\n      password:['',[Validators.required, Validators.minLength(6),Validators.maxLength(12) ]],\n      email:['', [Validators.required, Validators.email]],\n   })\n  }\n\n  ngOnInit() {}\n\n  get Password(){\n    return this.form.get(\"password\");\n  }\n \n  get Mail(){\n   return this.form.get(\"email\");\n  }\n\n  get PasswordValid(){\n    return this.Password?.touched && !this.Password?.valid;\n  }\n\n  get MailValid() {\n    return false\n  }\n \n\n  onEnviar(event: Event){\n    // Detenemos la propagación o ejecución del compotamiento submit de un form\n    event.preventDefault; \n \n    if (this.form.valid){\n      // Llamamos a nuestro servicio para enviar los datos al servidor\n      // También podríamos ejecutar alguna lógica extra\n      alert(\"Todo salio bien ¡Enviar formuario!\")\n    }else{\n      // Corremos todas las validaciones para que se ejecuten los mensajes de error en el template     \n      this.form.markAllAsTouched(); \n    }\n \n  }\n\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}